*---------------------------------------------------------------------*
*    view related FORM routines
*---------------------------------------------------------------------*
*...processing: ZMREF_REQ_METDTA................................*
FORM GET_DATA_ZMREF_REQ_METDTA.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZREF_REQ_METDATA WHERE
(VIM_WHERETAB) .
    CLEAR ZMREF_REQ_METDTA .
ZMREF_REQ_METDTA-MANDT =
ZREF_REQ_METDATA-MANDT .
ZMREF_REQ_METDTA-OBJECT_CLASS =
ZREF_REQ_METDATA-OBJECT_CLASS .
ZMREF_REQ_METDTA-CHANGE_REQ_TYPE =
ZREF_REQ_METDATA-CHANGE_REQ_TYPE .
ZMREF_REQ_METDTA-BUSINESS_ID =
ZREF_REQ_METDATA-BUSINESS_ID .
ZMREF_REQ_METDTA-TABNAME =
ZREF_REQ_METDATA-TABNAME .
ZMREF_REQ_METDTA-FIELDS =
ZREF_REQ_METDATA-FIELDS .
ZMREF_REQ_METDTA-FIELD_SEQUANCE =
ZREF_REQ_METDATA-FIELD_SEQUANCE .
ZMREF_REQ_METDTA-ACTIVE =
ZREF_REQ_METDATA-ACTIVE .
<VIM_TOTAL_STRUC> = ZMREF_REQ_METDTA.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZMREF_REQ_METDTA .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZMREF_REQ_METDTA.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZMREF_REQ_METDTA-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZREF_REQ_METDATA WHERE
  OBJECT_CLASS = ZMREF_REQ_METDTA-OBJECT_CLASS AND
  CHANGE_REQ_TYPE = ZMREF_REQ_METDTA-CHANGE_REQ_TYPE AND
  BUSINESS_ID = ZMREF_REQ_METDTA-BUSINESS_ID AND
  TABNAME = ZMREF_REQ_METDTA-TABNAME AND
  FIELDS = ZMREF_REQ_METDTA-FIELDS .
    IF SY-SUBRC = 0.
    DELETE ZREF_REQ_METDATA .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZREF_REQ_METDATA WHERE
  OBJECT_CLASS = ZMREF_REQ_METDTA-OBJECT_CLASS AND
  CHANGE_REQ_TYPE = ZMREF_REQ_METDTA-CHANGE_REQ_TYPE AND
  BUSINESS_ID = ZMREF_REQ_METDTA-BUSINESS_ID AND
  TABNAME = ZMREF_REQ_METDTA-TABNAME AND
  FIELDS = ZMREF_REQ_METDTA-FIELDS .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZREF_REQ_METDATA.
    ENDIF.
ZREF_REQ_METDATA-MANDT =
ZMREF_REQ_METDTA-MANDT .
ZREF_REQ_METDATA-OBJECT_CLASS =
ZMREF_REQ_METDTA-OBJECT_CLASS .
ZREF_REQ_METDATA-CHANGE_REQ_TYPE =
ZMREF_REQ_METDTA-CHANGE_REQ_TYPE .
ZREF_REQ_METDATA-BUSINESS_ID =
ZMREF_REQ_METDTA-BUSINESS_ID .
ZREF_REQ_METDATA-TABNAME =
ZMREF_REQ_METDTA-TABNAME .
ZREF_REQ_METDATA-FIELDS =
ZMREF_REQ_METDTA-FIELDS .
ZREF_REQ_METDATA-FIELD_SEQUANCE =
ZMREF_REQ_METDTA-FIELD_SEQUANCE .
ZREF_REQ_METDATA-ACTIVE =
ZMREF_REQ_METDTA-ACTIVE .
    IF SY-SUBRC = 0.
    UPDATE ZREF_REQ_METDATA ##WARN_OK.
    ELSE.
    INSERT ZREF_REQ_METDATA .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZMREF_REQ_METDTA-UPD_FLAG,
STATUS_ZMREF_REQ_METDTA-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZMREF_REQ_METDTA.
  SELECT SINGLE * FROM ZREF_REQ_METDATA WHERE
OBJECT_CLASS = ZMREF_REQ_METDTA-OBJECT_CLASS AND
CHANGE_REQ_TYPE = ZMREF_REQ_METDTA-CHANGE_REQ_TYPE AND
BUSINESS_ID = ZMREF_REQ_METDTA-BUSINESS_ID AND
TABNAME = ZMREF_REQ_METDTA-TABNAME AND
FIELDS = ZMREF_REQ_METDTA-FIELDS .
ZMREF_REQ_METDTA-MANDT =
ZREF_REQ_METDATA-MANDT .
ZMREF_REQ_METDTA-OBJECT_CLASS =
ZREF_REQ_METDATA-OBJECT_CLASS .
ZMREF_REQ_METDTA-CHANGE_REQ_TYPE =
ZREF_REQ_METDATA-CHANGE_REQ_TYPE .
ZMREF_REQ_METDTA-BUSINESS_ID =
ZREF_REQ_METDATA-BUSINESS_ID .
ZMREF_REQ_METDTA-TABNAME =
ZREF_REQ_METDATA-TABNAME .
ZMREF_REQ_METDTA-FIELDS =
ZREF_REQ_METDATA-FIELDS .
ZMREF_REQ_METDTA-FIELD_SEQUANCE =
ZREF_REQ_METDATA-FIELD_SEQUANCE .
ZMREF_REQ_METDTA-ACTIVE =
ZREF_REQ_METDATA-ACTIVE .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZMREF_REQ_METDTA USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZMREF_REQ_METDTA-OBJECT_CLASS TO
ZREF_REQ_METDATA-OBJECT_CLASS .
MOVE ZMREF_REQ_METDTA-CHANGE_REQ_TYPE TO
ZREF_REQ_METDATA-CHANGE_REQ_TYPE .
MOVE ZMREF_REQ_METDTA-BUSINESS_ID TO
ZREF_REQ_METDATA-BUSINESS_ID .
MOVE ZMREF_REQ_METDTA-TABNAME TO
ZREF_REQ_METDATA-TABNAME .
MOVE ZMREF_REQ_METDTA-FIELDS TO
ZREF_REQ_METDATA-FIELDS .
MOVE ZMREF_REQ_METDTA-MANDT TO
ZREF_REQ_METDATA-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZREF_REQ_METDATA'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZREF_REQ_METDATA TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZREF_REQ_METDATA'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
